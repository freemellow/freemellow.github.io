<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freemellow.github.io/news/article-42085.htm" />
    <meta charset="utf-8">
    <title>Unity实现简单的对象池_在线工具</title>
        <meta name="description" content="先说说为什么要使用对象池 在Unity游戏运行时，经常需要生成一些物体，例如子弹、敌人等。虽然Unity中有Instantiate()方法可以使用，但是在某些情况下并不高效。特别是对于那些需要大量生成" />
        <link rel="icon" href="/assets/website/img/freemellow/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free Mellow免费机场订阅节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freemellow.github.io/news/article-42085.htm" />
    <meta property="og:site_name" content="Free Mellow免费机场订阅节点官网" />
    <meta property="og:title" content="Unity实现简单的对象池_在线工具" />
    <meta property="og:image" content="https://freemellow.github.io/uploads/20240925-1/ea2f2caff929bf209169ee32e7df3531.webp" />
        <meta property="og:release_date" content="2025-01-17T09:31:54" />
    <meta property="og:updated_time" content="2025-01-17T09:31:54" />
        <meta property="og:description" content="先说说为什么要使用对象池 在Unity游戏运行时，经常需要生成一些物体，例如子弹、敌人等。虽然Unity中有Instantiate()方法可以使用，但是在某些情况下并不高效。特别是对于那些需要大量生成" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Unity实现简单的对象池_在线工具">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://maxcdn.bootstrapcdn.com">
    
    <!-- Stylesheets -->
    <link href="/assets/website/css/freemellow/bootstrap.css" rel="stylesheet">
    <link href="/assets/website/css/freemellow/responsive.css" rel="stylesheet">
    <link href="/assets/website/css/freemellow/style.css" rel="stylesheet">
    <link href="http://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">
    <!-- mobile responsive meta -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-1J70V33BC1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-1J70V33BC1');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <div class="page-wrapper">
                <!-- Preloader -->
        <div class="preloader"></div>
        <!-- Preloader -->
        <!--Main Header-->
        <header class="main-header-block sticky-header">
            <div class="container">
                <div class="logo">
                    <figure> 
                        <a href="/">
                                                        <span>Free Mellow</span>
                                                    </a>
                    </figure>
                </div>
                <div class="header-area clearfix">
                    <nav class="main-menu-navigation">
                        <div class="navbar-header">
                            <!-- Toggle Button -->
                            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse"> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button>
                        </div>
                        <div class="navbar-collapse collapse clearfix">
                            <ul class="navigation clearfix">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a></li>
                            </ul>
                        </div>
                    </nav>
                </div>
            </div>
        </header>
        <!--End Main Header -->
        <!--Page Title-->
        <section class="page-title">
            <div class="container clearfix text-center">
                <div class="title">
                    <h1>Unity实现简单的对象池_在线工具</h1>
                </div>
                <ul class="title-manu">
                    <li><a href="/">首页</a></li>
                    <li>-</li>
                    <li><a href="/news/">新闻资讯</a></li>
                    <li>-</li>
                    <li>正文</li>
                </ul>
            </div>
        </section>
        <!--End Page Title-->
        <!--Wellcome Section-->
        <section class="wellcome-area">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				</h1> <p>先说说为什么要使用对象池<br /> 在Unity游戏运行时，经常需要生成一些物体，例如子弹、敌人等。虽然Unity中有<code>Instantiate()</code>方法可以使用，但是在某些情况下并不高效。特别是对于那些需要大量生成又需要大量销毁的物体来说，多次重复调用<code>Instantiate()</code>方法和<code>Destory()</code>方法会造成大量的性能消耗。<br /> 这时使用对象池是一个更好的选择。<br /> 那么什么是对象池呢？<br /> 简单来说，就是在一开始创建一些物体(或对象)，将它们隐藏(休眠)起来，对象池就是这些物体的集合，当需要使用的时候，就将需要的对象激活然后使用，而不是实例化生成。如果对象池中的对象消耗完了可以扩大对象池或者重新再次使用对象池中的对象。<br /> 一般情况下，一个对象池中存放的都是一类物体，我们一般希望创建多个对象池来存储不同类型的物体。<br /> 例如我们需要两个对象池来分别存储球体和立方体。<br /> 那么可以选择使用<code>Dictionary</code>来创建对象池，这样不仅可以创建对象池，还能指定每个对象池存储对象的类型。这样就能通过Tag来访问对象池。<br /> 至于对象池中可以使用<code>Queue</code>(队列)来存储具体的对象，队列不仅可以快速获取到第一个对象，能够按顺序获取对象。如果出队的对象在使用完成之后再次入队，那么这样就可以一直循环来重用对象。</p> </h1> <p>新建一个Unity项目，在场景中添加一个空物体，命名为ObjectPool<br /> 同时制作一个黑色的地面便于显示和观察<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220505/039dcdc0ecf4166c3f26e5ae09249647.jpg" alt="Unity实现简单的对象池_在线工具"><br /> 新建脚本<code>ObjectPooler</code>添加到ObjectPool上</p> <pre><code>public class ObjectPooler : MonoBehaviour {     [System.Serializable]        public class Pool    //对象池类     {         public string tag;          //对象池的Tag(名称)         public GameObject prefab;   //对象池所保存的物体类型         public int size;            //对象池的大小     }     public List&lt;Pool&gt; pools;                  Dictionary&lt;string, Queue&lt;GameObject&gt;&gt; poolDictionary;  //声明字典      void Start()     {         //实例化字典                  对象池的Tag   对象池保存的物体         poolDictionary = new Dictionary&lt;string, Queue&lt;GameObject&gt;&gt;();     } } </code></pre> <p>在Inspector中添加对应的数据，这里简单创建了立方体和球体并设为了预制体<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220505/647e9500dbeb73596520642a982fcad4.jpg" alt="Unity实现简单的对象池_在线工具"></p> <p>然后继续修改<code>ObjectPooler</code></p> <pre><code>public class ObjectPooler : MonoBehaviour {     [System.Serializable]        public class Pool     {         public string tag;         public GameObject prefab;         public int size;     }     public List&lt;Pool&gt; pools;     Dictionary&lt;string, Queue&lt;GameObject&gt;&gt; poolDictionary;      public static ObjectPooler Instance;    //单例模式，便于访问对象池     private void Awake()     {         Instance = this;     }     void Start()     {         poolDictionary = new Dictionary&lt;string, Queue&lt;GameObject&gt;&gt;();         foreach (Pool pool in pools)         {             Queue&lt;GameObject&gt; objectPool = new Queue&lt;GameObject&gt;();     //为每个对象池创建队列             for (int i = 0; i &lt; pool.size; i++)             {                 GameObject obj = Instantiate(pool.prefab);                 obj.SetActive(false);   //隐藏对象池中的对象                 objectPool.Enqueue(obj);//将对象入队             }             poolDictionary.Add(pool.tag, objectPool);   //添加到字典后可以通过tag来快速访问对象池         }     }      public GameObject SpawnFromPool(string tag, Vector3 positon, Quaternion rotation)     //从对象池中获取对象的方法     {         if (!poolDictionary.ContainsKey(tag))  //如果对象池字典中不包含所需的对象池         {             Debug.Log("Pool: " + tag + " does not exist");             return null;         }          GameObject objectToSpawn = poolDictionary[tag].Dequeue();  //出队，从对象池中获取所需的对象         objectToSpawn.transform.position = positon;  //设置获取到的对象的位置         objectToSpawn.transform.rotation = rotation; //设置对象的旋转         objectToSpawn.SetActive(true);                //将对象从隐藏设为激活          poolDictionary[tag].Enqueue(objectToSpawn);     //再次入队，可以重复使用，如果需要的对象数量超过对象池内对象的数量，在考虑扩大对象池         //这样重复使用就不必一直生成和消耗对象，节约了大量性能         return objectToSpawn;  //返回对象     } } </code></pre> <p>新建脚本<code>CubeSpanwer</code>，来使用对象池生成物体</p> <pre><code>public class CubeSpanwer : MonoBehaviour {     ObjectPooler objectPooler;     private void Start()     {         objectPooler = ObjectPooler.Instance;     }     private void FixedUpdate()     {         //这样会高效一点，比ObjectPooler.Instance         objectPooler.SpawnFromPool("Cube", transform.position, Quaternion.identity);     } } </code></pre> <p>新建脚本<code>Cube</code>，添加到Cube预制体上，让其在生成时添加一个力便于观察<br /> 注意：为了方便观察这里移除了Cube上的BoxCollider</p> <pre><code>public class Cube : MonoBehaviour {     void Start()     {         GetComponent&lt;Rigidbody&gt;().AddForce(new Vector3(Random.Range(0f, 0.2f), 1f, Random.Range(0f, 0.2f)));     } } </code></pre> <p>我们发现Cube并没有向上飞起而是堆叠在一起<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220505/b36d873eff6e0be5af2da27a93bef7f0.jpg" alt="Unity实现简单的对象池_在线工具"><br /> 这时因为Cube只在生成时在Start中添加了力，只调用了一次，但马上就被隐藏放入对象池了，等到再次取出时，并没有任何方法的调用，只是单纯设置位置</p> <p>我们需要让cube对象知道自己被重用了，再次调用添加力的方法<br /> 新建接口 <code>IPooledObject</code></p> <pre><code>public interface IPooledObject {     void OnObjectSpawn(); } </code></pre> <p>然后让<code>Cube</code>继承该接口</p> <pre><code>public class Cube : MonoBehaviour, IPooledObject {     private Rigidbody rig;     public void OnObjectSpawn()     {         rig = gameObject.GetComponent&lt;Rigidbody&gt;();         rig.velocity = Vector3.zero;	//将速度重置为0，物体在被隐藏时仍然具有速度，不然重用时仍然具有向下的速度         rig.AddForce(new Vector3(Random.Range(0, 0.2f), 10, Random.Range(0, 0.2f)), ForceMode.Impulse);     } } </code></pre> <p>然后修改<code>ObjectPooler</code>，让Cube在被重用时调用重用的方法</p> <pre><code>public GameObject SpawnFromPool(string tag, Vector3 positon, Quaternion rotation)     //从对象池中获取对象的方法     {         ......         IPooledObject pooledObj = objectToSpawn.GetComponent&lt;IPooledObject&gt;();         if (pooledObj != null)  //判断，并不是所有对象都继承了该接口，例如Cube我想让它向上飞，Sphere则让它直接生成，Sphere就不必继承IPoolObject接口         {             pooledObj.OnObjectSpawn();  //调用重用时的方法         }         poolDictionary[tag].Enqueue(objectToSpawn);         return objectToSpawn;     } </code></pre> <p>运行结果：</p> <p>Cube从CubeSpawner不断生成，可以自行设置计时器来限制生成的速度<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220505/2ca24adb444ff93c15bb3bcdb575ebd4.jpg" alt="Unity实现简单的对象池_在线工具"></p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-41585.htm">宠物领养系统论文总结（宠物领养系统国内外现状）</a></p>
                                        <p>下一个：<a href="/news/article-42086.htm">宠物粮食品牌大全排名榜 宠物粮食品牌大全排名榜图片</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-29506.htm" title="OpenSSL版本升级，重编译nginx。ssl自定义证书，https配置。">OpenSSL版本升级，重编译nginx。ssl自定义证书，https配置。</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-1-free-subscribe-node.htm" title="2月1日→19.2M/S|2025年最新免费节点Free Mellow订阅链接地址">2月1日→19.2M/S|2025年最新免费节点Free Mellow订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-8-free-subscribe-node.htm" title="12月8日→18.3M/S|2024年最新免费节点Free Mellow订阅链接地址">12月8日→18.3M/S|2024年最新免费节点Free Mellow订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-28-node-share.htm" title="12月28日→18.5M/S|2024年最新免费节点Free Mellow订阅链接地址">12月28日→18.5M/S|2024年最新免费节点Free Mellow订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-28-node-share-links.htm" title="1月28日→22.3M/S|2025年最新免费节点Free Mellow订阅链接地址">1月28日→22.3M/S|2025年最新免费节点Free Mellow订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-11-free-node-subscribe.htm" title="11月11日→18.8M/S|2024年最新免费节点Free Mellow订阅链接地址">11月11日→18.8M/S|2024年最新免费节点Free Mellow订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-29036.htm" title="开宠物用品店利润大吗知乎文章怎么写（开宠物用品店挣钱吗）">开宠物用品店利润大吗知乎文章怎么写（开宠物用品店挣钱吗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-10-free-subscribe-node.htm" title="1月10日→19.3M/S|2025年最新免费节点Free Mellow订阅链接地址">1月10日→19.3M/S|2025年最新免费节点Free Mellow订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-24-free-node-subscribe-links.htm" title="1月24日→21.4M/S|2025年最新免费节点Free Mellow订阅链接地址">1月24日→21.4M/S|2025年最新免费节点Free Mellow订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-21732.htm" title="宠物领养电子合同模板怎么写（宠物领养合同内容）">宠物领养电子合同模板怎么写（宠物领养合同内容）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
        <!--End Wellcome Section-->
                <!--main-footer-area-->
        <footer class="main-footer-area" style="background: url(images/background/3.jpg);">
            <div class="footer-bottom">
                <div class="container">
                    <div class="copyright-text text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        <p>
                            <a href="/">Free Mellow免费机场订阅节点官网</a> 版权所有
                            <br />
                            Powered by WordPress
                        </p>
                    </div>
                </div>
            </div>
        </footer>
        <!--End main-footer-area-->
        <!--Scroll to top-->
        <div class="scroll-to-top scroll-to-target" data-target=".header-top"><span class="icon fa fa-angle-up"></span></div>
        <script src="/assets/website/js/frontend/freemellow/jquery.js"></script>
        <script src="/assets/website/js/frontend/freemellow/bootstrap.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/jquery.fancybox.pack.js"></script>
        <script src="/assets/website/js/frontend/freemellow/jquery.fancybox-media.js"></script>
        <!--<script src="/assets/website/js/frontend/freemellow/html5lightbox.js"></script>-->
        <!-- revolution slider js -->
        <script src="/assets/website/js/frontend/freemellow/revolution/js/jquery.themepunch.tools.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/revolution/js/jquery.themepunch.revolution.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/revolution/js/extensions/revolution.extension.actions.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/revolution/js/extensions/revolution.extension.carousel.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/revolution/js/extensions/revolution.extension.kenburn.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/revolution/js/extensions/revolution.extension.layeranimation.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/revolution/js/extensions/revolution.extension.migration.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/revolution/js/extensions/revolution.extension.navigation.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/revolution/js/extensions/revolution.extension.parallax.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/revolution/js/extensions/revolution.extension.slideanims.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/revolution/js/extensions/revolution.extension.video.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/owl.carousel.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/wow.js"></script>
        <!-- bxslider -->
        <script src="/assets/website/js/frontend/freemellow/bxslider.js"></script>
        <script src="/assets/website/js/frontend/freemellow/jquery.countTo.js"></script>
        <script src="/assets/website/js/frontend/freemellow/script.js"></script>
        <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
    </div>
    <!--End pagewrapper-->
</body>

</html>