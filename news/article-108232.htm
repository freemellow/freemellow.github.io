<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freemellow.github.io/news/article-108232.htm" />
    <meta charset="utf-8">
    <title>Spring Boot启动故障分析神器</title>
        <meta name="description" content="1、重写端口占用故障分析器  2、自定义故障分析器 目录  			   大家好， 我是指北君。 相信大家在启动 Spring Boot 项目的时候，也遇到过由于各种各样的原因而启动失败的情况吧，显示出" />
        <link rel="icon" href="/assets/website/img/freemellow/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free Mellow免费机场订阅节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freemellow.github.io/news/article-108232.htm" />
    <meta property="og:site_name" content="Free Mellow免费机场订阅节点官网" />
    <meta property="og:title" content="Spring Boot启动故障分析神器" />
    <meta property="og:image" content="https://freemellow.github.io/uploads/20240925-1/88471307cb96d1cf682f64446fd74cec.webp" />
        <meta property="og:release_date" content="2025-04-30T09:34:41" />
    <meta property="og:updated_time" content="2025-04-30T09:34:41" />
        <meta property="og:description" content="1、重写端口占用故障分析器  2、自定义故障分析器 目录  			   大家好， 我是指北君。 相信大家在启动 Spring Boot 项目的时候，也遇到过由于各种各样的原因而启动失败的情况吧，显示出" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Spring Boot启动故障分析神器">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://maxcdn.bootstrapcdn.com">
    
    <!-- Stylesheets -->
    <link href="/assets/website/css/freemellow/bootstrap.css" rel="stylesheet">
    <link href="/assets/website/css/freemellow/responsive.css" rel="stylesheet">
    <link href="/assets/website/css/freemellow/style.css" rel="stylesheet">
    <link href="http://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <!-- mobile responsive meta -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-1J70V33BC1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-1J70V33BC1');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <div class="page-wrapper">
                <!-- Preloader -->
        <div class="preloader"></div>
        <!-- Preloader -->
        <!--Main Header-->
        <header class="main-header-block sticky-header">
            <div class="container">
                <div class="logo">
                    <figure> 
                        <a href="/">
                                                        <span>Free Mellow</span>
                                                    </a>
                    </figure>
                </div>
                <div class="header-area clearfix">
                    <nav class="main-menu-navigation">
                        <div class="navbar-header">
                            <!-- Toggle Button -->
                            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse"> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button>
                        </div>
                        <div class="navbar-collapse collapse clearfix">
                            <ul class="navigation clearfix">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                <li><a href="/client.htm">客户端</a></li>
                                                                <li><a href="/news/">新闻资讯</a></li>
                                                            </ul>
                        </div>
                    </nav>
                </div>
            </div>
        </header>
        <!--End Main Header -->
        <!--Page Title-->
        <section class="page-title">
            <div class="container clearfix text-center">
                <div class="title">
                    <h1>Spring Boot启动故障分析神器</h1>
                </div>
                <ul class="title-manu">
                    <li><a href="/">首页</a></li>
                    <li>-</li>
                    <li><a href="/news/">新闻资讯</a></li>
                    <li>-</li>
                    <li>正文</li>
                </ul>
            </div>
        </section>
        <!--End Page Title-->
        <!--Wellcome Section-->
        <section class="wellcome-area">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                <div class="xcblog-blog-detail xcblog-blog-detail-defined">
                      				  				  				  			 <div id="log-box">  				<div id="catalog"><ul id="catalog-ul"> <li><i class="be be-arrowright"></i> 1、重写端口占用故障分析器</li> <li><i class="be be-arrowright"></i> 2、自定义故障分析器</li> </ul><span class="log-zd"><span class="log-close"><i class="be be-cross"></i><strong>目录</strong></span></span></div>  			</div> <div id="content_views" class="htmledit_views"> <div id="js_content"> <p>大家好， 我是指北君。</p> <p>相信大家在启动 Spring Boot 项目的时候，也遇到过由于各种各样的原因而启动失败的情况吧，显示出一大堆的错误信息，比如端口占用时会打印如下异常：</p> <pre class="has"><code class="language-go">*************************** APPLICATION&nbsp;FAILED&nbsp;TO&nbsp;START *************************** Description: Embedded&nbsp;servlet&nbsp;container&nbsp;failed&nbsp;to&nbsp;start.&nbsp;Port&nbsp;8080&nbsp;was&nbsp;already&nbsp;in&nbsp;use. Action: Identify&nbsp;and&nbsp;stop&nbsp;the&nbsp;process&nbsp;that's&nbsp;listening&nbsp;on&nbsp;port&nbsp;8080&nbsp;or&nbsp;configure&nbsp;this&nbsp;application&nbsp;to&nbsp;listen&nbsp;on&nbsp;another&nbsp;port. </code></pre> <p>相信大家应该很熟悉吧，多少遇到过这种情况吧。</p> <p>错误信息大家都能看懂，但是不太友好。今天指北君就来带大家看看 Spring Boot 是怎么实现这样一个异常错误信息输出的呢？给大家分享一个 Spring Boot 启动失败的简单易懂的玩法，能够让大家轻而易举的看出问题所在之处。</p> <h3>FailureAnalyzer 介绍</h3> <p>通过端口重复绑定的异常信息的输出，指北君找到了具体输出的类 PortInUseFailureAnalyzer 。</p> <pre class="has"><code class="language-go">class&nbsp;PortInUseFailureAnalyzer&nbsp;extends&nbsp;AbstractFailureAnalyzer&lt;PortInUseException&gt;&nbsp;{ &nbsp;&nbsp;&nbsp;&nbsp;@Override &nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;FailureAnalysis&nbsp;analyze(Throwable&nbsp;rootFailure,&nbsp;PortInUseException&nbsp;cause)&nbsp;{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;FailureAnalysis("Web&nbsp;server&nbsp;failed&nbsp;to&nbsp;start.&nbsp;Port&nbsp;"&nbsp;+&nbsp;cause.getPort()&nbsp;+&nbsp;"&nbsp;was&nbsp;already&nbsp;in&nbsp;use.", &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"Identify&nbsp;and&nbsp;stop&nbsp;the&nbsp;process&nbsp;that's&nbsp;listening&nbsp;on&nbsp;port&nbsp;"&nbsp;+&nbsp;cause.getPort()&nbsp;+&nbsp;"&nbsp;or&nbsp;configure&nbsp;this&nbsp;" &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;"application&nbsp;to&nbsp;listen&nbsp;on&nbsp;another&nbsp;port.", &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cause); &nbsp;&nbsp;&nbsp;&nbsp;} } </code></pre> <p>PortInUseFailureAnalyzer 继承了 AbstractFailureAnalyzer 类。而且可以看出该类是针对 PortInUseException 异常的分析。</p> <p> <img decoding="async" src="http://img.555519.xyz/uploads/20221229/9c90b62dbf64ac28c03e7d27cfab4c51.jpg" alt="Spring Boot启动故障分析神器"/><figcaption>   spring boot failure1<br />  </figcaption><p>我们来看看 Spring Boot 提供的 FailureAnalyzer 接口，只定义了 一个annlyze 接口。好像和 PortInUseFailureAnalyer 中的 analyze 方法不太一样，怎么回事呢？</p> <pre class="has"><code class="language-go">@FunctionalInterface public&nbsp;interface&nbsp;FailureAnalyzer&nbsp;{ &nbsp;&nbsp;&nbsp;FailureAnalysis&nbsp;analyze(Throwable&nbsp;failure); } </code></pre> <p>相信大家也很容易就能想到， AbstractFailureAnalyzer 对 FailureAnalyzer 进行了封装处理，使得其他个性化的错误可以自由发挥，能够暴露出更多的错误信息。</p> <pre class="has"><code class="language-go">public&nbsp;abstract&nbsp;class&nbsp;AbstractFailureAnalyzer&lt;T&nbsp;extends&nbsp;Throwable&gt;&nbsp;implements&nbsp;FailureAnalyzer&nbsp;{ &nbsp;&nbsp;&nbsp;&nbsp;@Override &nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;FailureAnalysis&nbsp;analyze(Throwable&nbsp;failure)&nbsp;{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T&nbsp;cause&nbsp;=&nbsp;findCause(failure,&nbsp;getCauseType()); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(cause&nbsp;!=&nbsp;null)&nbsp;{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;analyze(failure,&nbsp;cause); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null; &nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;abstract&nbsp;FailureAnalysis&nbsp;analyze(Throwable&nbsp;rootFailure,&nbsp;T&nbsp;cause); &nbsp;&nbsp;&nbsp;&nbsp;@SuppressWarnings("unchecked") &nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;Class&lt;?&nbsp;extends&nbsp;T&gt;&nbsp;getCauseType()&nbsp;{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(Class&lt;?&nbsp;extends&nbsp;T&gt;)&nbsp;ResolvableType.forClass(AbstractFailureAnalyzer.class,&nbsp;getClass()).resolveGeneric(); &nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;&nbsp;&nbsp;@SuppressWarnings("unchecked") &nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;final&nbsp;&lt;E&nbsp;extends&nbsp;Throwable&gt;&nbsp;E&nbsp;findCause(Throwable&nbsp;failure,&nbsp;Class&lt;E&gt;&nbsp;type)&nbsp;{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(failure&nbsp;!=&nbsp;null)&nbsp;{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(type.isInstance(failure))&nbsp;{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(E)&nbsp;failure; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;failure&nbsp;=&nbsp;failure.getCause(); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null; &nbsp;&nbsp;&nbsp;&nbsp;} } </code></pre> <p>这个时候，我们是不是该想到，Spring Boot 是不是提供了很多这样的故障分析器呢？答案是肯定的，Spring Boot 提供了一系列各种不同类型的故障分析器来方便我们开发者快速定位到错误的原因。如下图所示，Spring Boot 默认提供了14种故障分析器。</p> <p style="text-align: center"><img decoding="async" src="http://img.555519.xyz/uploads/20221229/1fa236c99745855a7c64f6bf07e1de7b.jpg" alt="Spring Boot启动故障分析神器"/></p><figcaption></figcaption><p>这个时候我们又想了，那他又是怎么注册这些分析器到Spring Boot 项目的呢？我们已经知道 Spring Boot 大部分都是通过约定配置来实现的，我们就先找一下，有没有什么配置文件做了这个事情。通过指北君的一顿搜索操作，终于找到了。Spring Boot 内置注册的所有故障分析器在这个文件里面：</p> <pre class="has"><code class="language-go">/org/springframework/boot/spring-boot/2.5.0.RELEASE/spring-boot-2.5.0.RELEASE-sources.jar!/META-INF/spring.factories </code></pre> <p>注册的所有故障分析器列表：</p> <pre class="has"><code class="language-go">#&nbsp;Failure&nbsp;Analyzers org.springframework.boot.diagnostics.FailureAnalyzer=\ org.springframework.boot.context.config.ConfigDataNotFoundFailureAnalyzer,\ org.springframework.boot.context.properties.IncompatibleConfigurationFailureAnalyzer,\ org.springframework.boot.context.properties.NotConstructorBoundInjectionFailureAnalyzer,\ org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer,\ org.springframework.boot.diagnostics.analyzer.BeanDefinitionOverrideFailureAnalyzer,\ org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer,\ org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer,\ org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer,\ org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer,\ org.springframework.boot.diagnostics.analyzer.ConnectorStartFailureAnalyzer,\ org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer,\ org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer,\ org.springframework.boot.diagnostics.analyzer.PortInUseFailureAnalyzer,\ org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer,\ org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer,\ org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer,\ org.springframework.boot.diagnostics.analyzer.PatternParseFailureAnalyzer,\ org.springframework.boot.liquibase.LiquibaseChangelogMissingFailureAnalyzer </code></pre> <p>通过上述的一堆分析，想必大家已经清楚，FailureAnalyzer 是怎么回事了吧。接下来指北君就要带领大家一起定义一个FailureAnalzer 玩玩了。</p> <h3>自定义实现 FailureAnalyzer</h3> <p>接下来我们通过举两个例子来看看，故障分析器是怎么实现的。</p> <span class="directory"></span><h4 id="title-0">1、重写端口占用故障分析器</h4> <p>从简单的入手，我们先重写一个 PortInUseFailureAnalyzer 看看，能不能达到我们想要的效果。</p> <p>很简单，创建一个故障分析器继承 AbstractFailureAnalyzer 抽象类即可：</p> <pre class="has"><code class="language-go">public&nbsp;class&nbsp;MyPortInUseFailureAnalyzer&nbsp;extends&nbsp;AbstractFailureAnalyzer&lt;PortInUseException&gt;&nbsp;{ &nbsp;&nbsp;&nbsp;&nbsp;@Override &nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;FailureAnalysis&nbsp;analyze(Throwable&nbsp;rootFailure,&nbsp;PortInUseException&nbsp;cause)&nbsp;{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;FailureAnalysis("你启动的端口&nbsp;"&nbsp;+&nbsp;cause.getPort()&nbsp;+&nbsp;"&nbsp;被占用", &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"快检查下端口&nbsp;"&nbsp;+&nbsp;cause.getPort()&nbsp;+&nbsp;"&nbsp;被哪个程序占用", &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cause); &nbsp;&nbsp;&nbsp;&nbsp;} } </code></pre> <p>重写 analyze 方法，并返回一个 FailureAnalysis 对象， FailureAnalysis 类的三个主要信息分别是：</p> <pre class="has"><code class="language-go">public&nbsp;FailureAnalysis(String&nbsp;description,&nbsp;String&nbsp;action,&nbsp;Throwable&nbsp;cause)&nbsp;{ &nbsp;&nbsp;&nbsp;this.description&nbsp;=&nbsp;description; &nbsp;&nbsp;&nbsp;this.action&nbsp;=&nbsp;action; &nbsp;&nbsp;&nbsp;this.cause&nbsp;=&nbsp;cause; } </code></pre> <p>即要展示的：可读性的错误描述、建议的检查修复动作、原始异常。</p> <p>然后在项目的 resouces 目录下创建 META-INF/spring.factories 文件，内容添加：</p> <pre class="has"><code class="language-go">org.springframework.boot.diagnostics.FailureAnalyzer=\ &nbsp;&nbsp;com.javanorth.failure.analyzer.sample.MyPortInUseFailureAnalyzer </code></pre> <p>启动输出：</p> <pre class="has"><code class="language-go">*************************** APPLICATION&nbsp;FAILED&nbsp;TO&nbsp;START *************************** Description:  你启动的端口&nbsp;8080&nbsp;被占用  Action:  快检查下端口&nbsp;8080&nbsp;被哪个程序占用 </code></pre> <p>这样重写一下，是不是就感觉清晰很多了。</p> <span class="directory"></span><h4 id="title-1">2、自定义故障分析器</h4> <p>下面我们再来自定义一个全新的故障分析器，让大家能更清楚的认识故障分析器。</p> <p>我们在创建 Bean 的过程中手动抛出一个自定义的异常：</p> <pre class="has"><code class="language-go">public&nbsp;class&nbsp;JavaNorthException&nbsp;extends&nbsp;Exception&nbsp;{ &nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;JavaNorthException(String&nbsp;message)&nbsp;{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super(message); &nbsp;&nbsp;&nbsp;&nbsp;} }  @Bean public&nbsp;CommandLineRunner&nbsp;commandLineRunner()&nbsp;throws&nbsp;JavaNorthException&nbsp;{ &nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;JavaNorthException("Java&nbsp;North&nbsp;error."); } </code></pre> <p>添加一个故障分析器拦截该异常：</p> <pre class="has"><code class="language-go">public&nbsp;class&nbsp;JavaNorthFailureAnalyzer&nbsp;&nbsp;extends&nbsp;AbstractFailureAnalyzer&lt;JavaNorthException&gt;&nbsp;{ &nbsp;&nbsp;&nbsp;&nbsp;@Override &nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;FailureAnalysis&nbsp;analyze(Throwable&nbsp;rootFailure,&nbsp;JavaNorthException&nbsp;cause)&nbsp;{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;FailureAnalysis("java&nbsp;north&nbsp;error.",&nbsp;"快去检查一下吧",&nbsp;cause); &nbsp;&nbsp;&nbsp;&nbsp;} } </code></pre> <p>添加注册：</p> <pre class="has"><code class="language-go">org.springframework.boot.diagnostics.FailureAnalyzer=\ &nbsp;&nbsp;com.javanorth.failure.analyzer.sample.MyPortInUseFailureAnalyzer,\ &nbsp;&nbsp;com.javanorth.failure.analyzer.sample.JavaNorthFailureAnalyzer </code></pre> <p>启动输出：</p> <pre class="has"><code class="language-go">*************************** APPLICATION&nbsp;FAILED&nbsp;TO&nbsp;START *************************** Description:  java&nbsp;north&nbsp;error.  Action:  快去检查一下吧 </code></pre> <p>自定义一个新的故障分析器，是不是也很简单，和重写端口占用的分析器没什么区别。同样能够更加友好的给出错误信息。</p> <h3>总结</h3> <p>Spring Boot 提供的故障分析器，对我们分析一些错误非常的友好，我们不必为那些一大堆的异常信息一筹莫展。这么好的功能，你还在等什么，还不使用吗？</p> <p>本文的所有示例源代码都已上传到了 Github：</p> <blockquote> <p>https://github.com/javatechnorth/java-north-sample</p> </blockquote> <p>欢迎大家 Star 关注，后续会不断更新。</p> <p>有任何问题可以在公众号后台留言，指北君会第一时间回复大家。欢迎关注公众号【Java技术指北】，第一时间获取更多精彩内容。</p> </div></div> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-107404.htm">销售兽用疫苗处罚规定是什么（销售兽用疫苗处罚规定是什么内容）</a></p>
                                        <p>下一个：<a href="/news/article-108233.htm">宠物粮食品牌取名怎么取的 宠物粮食品牌取名怎么取的好听</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-91511.htm" title="动物疫苗周期和猪周期哪个长些（动物疫苗接种间隔）">动物疫苗周期和猪周期哪个长些（动物疫苗接种间隔）</a></li>
                        <li class="py-2"><a href="/news/article-80557.htm" title="C#反射使用方法过程及步骤">C#反射使用方法过程及步骤</a></li>
                        <li class="py-2"><a href="/news/article-65920.htm" title="动物医院好评语怎么写啊 动物医院好评语怎么写啊英语">动物医院好评语怎么写啊 动物医院好评语怎么写啊英语</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-5-free-node-subscribe-links.htm" title="3月5日→22.1M/S|2025年最新免费节点Free Mellow订阅链接地址">3月5日→22.1M/S|2025年最新免费节点Free Mellow订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-100268.htm" title="宠物领养证如何办理流程图解图片（正规领养宠物流程）">宠物领养证如何办理流程图解图片（正规领养宠物流程）</a></li>
                        <li class="py-2"><a href="/news/article-100267.htm" title="长春宠物医院电话号码是多少?（长春宠物医院电话号码是多少啊）">长春宠物医院电话号码是多少?（长春宠物医院电话号码是多少啊）</a></li>
                        <li class="py-2"><a href="/news/article-99498.htm" title="新手如何开宠物店（我想开宠物店怎么开）">新手如何开宠物店（我想开宠物店怎么开）</a></li>
                        <li class="py-2"><a href="/news/article-100907.htm" title="木炭生产机器全套全自动价格（木炭生产机器 全套 全自动价格）">木炭生产机器全套全自动价格（木炭生产机器 全套 全自动价格）</a></li>
                        <li class="py-2"><a href="/news/article-68489.htm" title="宠物粮食加工设备有哪些厂家生产（小型宠物粮加工厂需要什么手续）">宠物粮食加工设备有哪些厂家生产（小型宠物粮加工厂需要什么手续）</a></li>
                        <li class="py-2"><a href="/news/article-78466.htm" title="同城领养猫咪平台重庆有几家啊（重庆领养猫咪贴吧）">同城领养猫咪平台重庆有几家啊（重庆领养猫咪贴吧）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">89</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
        <!--End Wellcome Section-->
                <!--main-footer-area-->
        <footer class="main-footer-area" style="background: url(images/background/3.jpg);">
            <div class="footer-bottom">
                <div class="container">
                    <div class="copyright-text text-center">
                                            <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                        <p>
                            <a href="/">Free Mellow免费机场订阅节点官网</a> 版权所有
                            <br />
                            Powered by WordPress
                        </p>
                    </div>
                </div>
            </div>
        </footer>
        <!--End main-footer-area-->
        <!--Scroll to top-->
        <div class="scroll-to-top scroll-to-target" data-target=".header-top"><span class="icon fa fa-angle-up"></span></div>
        <script src="/assets/website/js/frontend/freemellow/jquery.js"></script>
        <script src="/assets/website/js/frontend/freemellow/bootstrap.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/jquery.fancybox.pack.js"></script>
        <script src="/assets/website/js/frontend/freemellow/jquery.fancybox-media.js"></script>
        <!--<script src="/assets/website/js/frontend/freemellow/html5lightbox.js"></script>-->
        <!-- revolution slider js -->
        <script src="/assets/website/js/frontend/freemellow/revolution/js/jquery.themepunch.tools.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/revolution/js/jquery.themepunch.revolution.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/revolution/js/extensions/revolution.extension.actions.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/revolution/js/extensions/revolution.extension.carousel.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/revolution/js/extensions/revolution.extension.kenburn.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/revolution/js/extensions/revolution.extension.layeranimation.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/revolution/js/extensions/revolution.extension.migration.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/revolution/js/extensions/revolution.extension.navigation.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/revolution/js/extensions/revolution.extension.parallax.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/revolution/js/extensions/revolution.extension.slideanims.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/revolution/js/extensions/revolution.extension.video.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/owl.carousel.min.js"></script>
        <script src="/assets/website/js/frontend/freemellow/wow.js"></script>
        <!-- bxslider -->
        <script src="/assets/website/js/frontend/freemellow/bxslider.js"></script>
        <script src="/assets/website/js/frontend/freemellow/jquery.countTo.js"></script>
        <script src="/assets/website/js/frontend/freemellow/script.js"></script>
        <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
    </div>
    <!--End pagewrapper-->
</body>

</html>